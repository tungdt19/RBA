#!/bin/bash

# To run this script from anywhere in the console, run the following commands:
# chmod +x $(pwd)/fm
# echo -e "\nalias fm='$(pwd)/fm'\nalias fma='fm a'\nalias fmg='fm g'\nalias fmp='fm p'" >> ~/.bashrc
# source ~/.bashrc

echo "VTAG BACKEND DEPLOYMENT UTILITIES"

FOLDER="/home/vht/be"
PROFILE="production"
PORT="8080"
BASE_NAME="iot-vtag"
CONTAINER="vtag.be"
IMAGE="vtag/be"

if [ $# -eq 0 ]; then
  docker container ls -f name="$CONTAINER"
  exit 0;
fi

file=$(ls "$FOLDER" | grep "${BASE_NAME}[-]")
regex="^$BASE_NAME-(.*?)\.jar$"
[[ $file =~ $regex ]]
read -r _ VERSION <<< "${BASH_REMATCH[@]}"


dockerfile() {
  echo "Create Dockerfile at '$FOLDER/$MODULE'"
  {
    echo "FROM openjdk"
    echo 'LABEL maintainer="duclm22@viettel.com.vn"'
    echo "COPY ./$BASE_NAME-$VERSION.jar /"
    echo 'RUN echo "Asia/Ho_Chi_Minh" > /etc/timezone'
    echo 'RUN echo "10.55.123.124 api.iotcloud.com.vn iotcloud.com.vn" > /etc/hosts'
    echo "CMD [\"java\", \"-jar\", \"/$BASE_NAME-$VERSION.jar\", \"-Dspring.profiles.active=$PROFILE\"]"
  } > "$FOLDER/$MODULE/Dockerfile"
}

build() {
  echo "--> Building container $IMAGE"
  docker build -t "$IMAGE:$VERSION" "$FOLDER"
}

run() {
  docker run -dp "$PORT:$PORT" --name $CONTAINER -e "SPRING_PROFILES_ACTIVE=$PROFILE" \
     --add-host=api.iotcloud.com.vn:10.55.123.124 "$IMAGE:$VERSION"
}

remove() {
  echo "--> Removing container $CONTAINER"
  docker rm "$CONTAINER"
}

stop() {
  echo "--> Stopping container $CONTAINER"
  docker stop "$CONTAINER"
}

restart() {
  echo "--> Restarting container $CONTAINER"
  docker restart "$CONTAINER"
}

log_follow() {
  echo "--> Following container $CONTAINER"
  docker logs -f --since "10m" "$CONTAINER"
}

log_history() {
  docker logs "$CONTAINER" 2>&1 | less -R
}

ssh() {
  echo "--> Opening container $CONTAINER"
  docker exec -it "$CONTAINER" bash
}

for i in "${@}"; do
  case "$i" in
    r | run)              run ;;
    S | ssh)              ssh ;;
    s | stop)             stop ;;
    b | build)            build ;;
    d | rm | remove)      remove ;;
    R | re | restart)     restart ;;
    f | '' | lf | follow) log_follow ;;
    h | lh | history)     log_history ;;
    u | up | upgrade)     dockerfile; build; stop; remove; run; log_follow ;;
    *)                    echo "Do not recognize command '$2'" ;;
  esac
done
